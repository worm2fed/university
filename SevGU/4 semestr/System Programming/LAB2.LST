Turbo Assembler	 Version 3.0	    04/06/15 20:45:35	    Page 1
lab2.asm



      1				     ; программа для вычисления выражения max(y^2 + b, c) - c^3
      2				     ; тип данных: беззнаковые
      3				     ; длина данных:	байт
      4
      5
      6	0000			     LAB SEGMENT							     ;	     Имя	    +
      7				     сегмента
      8					     ASSUME CS:LAB, DS:LAB			     ;	     Имя сегмента	    +
      9				     кода и данных
     10						 ORG 100H					     ;	     Для		    +
     11				     COM–файлов	программа начинается	с адреса	100H
     12
     13						     ;	     Исполняемые команды
     14	0100					     START:
     15	0100  A0 0144r					     MOV AL, Y					     ; перемещаем +
     16				     Y в регистр AL
     17	0103  F6 26 0144r				     MUL Y					     ; возводим	Y в+
     18				     квадрат
     19	0107  8A 1E 0145r				     MOV BL, B					     ; перемещаем +
     20				     B в BL
     21	010B  B7 00					     MOV BH, 0					     ; расширяем В+
     22				     до слова
     23	010D  03 C3					     ADD AX, BX					     ; складываем +
     24				     Y^2 + B (результат в AX и DX)
     25
     26	010F  8A 1E 0146r				     MOV BL, C					     ; перемещаем +
     27				     C в BL
     28	0113  B7 00					     MOV BH, 0					     ; расиряем	С  +
     29				     до слова
     30	0115  3B C3					     CMP AX, BX					     ; формирует   +
     31				     флаги	(если флаг SF 1	- AX больше, если 0 -	меньше)
     32
     33	0117  73 33					     JAE M1					     ; если	AX	    +
     34				     больше или равен, то переходим по метке М1
     35
     36							     ; действия, если максимальным является C
     37							     ; AX и DX	хранит Y^2 + B
     38							     ; BX хранит C
     39	0119  8B C3					     MOV AX, BX					     ;			    +
     40				     переместили С в AX
     41	011B  F6 26 0146r				     MUL C					     ; возводим	C в+
     42				     квадрат
     43	011F  F6 26 0146r				     MUL C					     ; возводим	С  +
     44				     в	куб (хранится в DX и AX)
     45	0123  8B D8					     MOV BX, AX					     ; перемещаем +
     46				     младщую часть C^3 в BX
     47	0125  8B CA					     MOV CX, DX					     ; перемещаем +
     48				     старшую часть C^3 в CX
     49	0127  A0 0146r					     MOV AL, C					     ; пермещаем С+
     50				     в	AX
     51	012A  B4 00					     MOV AH, 0					     ; расширяем С+
     52				     до слова
     53	012C  BA 0000					     MOV DX, 0					     ; расширяем С+
     54				     до двух слов
     55	012F  2B C3					     SUB AX, BX					     ; вычитаем	    +
     56				     младшую часть
     57	0131  1B D1					     SBB DX, CX					     ; вычитаем	    +
Turbo Assembler	 Version 3.0	    04/06/15 20:45:35	    Page 2
lab2.asm



     58				     старшую часть
     59
     60	0133  79 06					     JNS M2					     ; переход к    +
     61				     метке	M2 при не отрицательном результате
     62	0135  C6 06 0147r FF 90				     MOV ERROR,	-1			     ; записываем флаг+
     63				     ошибки
     64
     65	013B						     M2:
     66	013B  A3 0148r						     MOV RESULT, AX		     ; записываем в	    +
     67				     резльтат младшую часть
     68	013E  89 16 014Ar					     MOV RESULT+2, DX		     ; записываем в	    +
     69				     результат	старшую часть
     70	0142  CD 20						     INT 20H				     ; выход в	    +
     71				     среду	DOS
     72
     73							     ; объявляем "переменные"
     74	0144  E6					     Y DB 230					     ;
     75	0145  48					     B DB 72					     ;
     76	0146  1D					     C DB 29					     ;
     77	0147  00					     ERROR DB 0					     ; переменная +
     78				     для кода ошибки
     79	0148  ???? ????					     RESULT DW ?, ?			     ; максимальное	    +
     80				     значение результата может быть размером	в два слова
     81
     82							     ; действия, если максимальным является +
     83				     Y^2 + B
     84							     ; AX хранит Y^2 + B
     85							     ; BX хранит C
     86	014C						     M1:
     87	014C  8B F0						     MOV SI, AX				     ;			    +
     88				     переместили младшую часть Y^2 + B в SI
     89	014E  8B FA						     MOV DI, DX				     ;			    +
     90				     переместили старшую часть Y^2 + B в DI
     91	0150  8B C3						     MOV AX, BX				     ;			    +
     92				     переместили С в AX
     93	0152  F6 26 0146r					     MUL C				     ; возводим	С  +
     94				     в	квадрат
     95	0156  F6 26 0146r					     MUL C				     ; возводим	С  +
     96				     в	куб (хранится в DX и AX)
     97	015A  2B F0						     SUB SI, AX				     ; вычитаем	    +
     98				     младшую чатсь
     99	015C  1B FA						     SBB DI, DX				     ; вычитаем	    +
    100				     старшую часть
    101	015E  8B C6						     MOV AX, SI
    102	0160  8B D7						     MOV DX, DI
    103
    104	0162  79 D7						     JNS M2				     ; переход к    +
    105				     метке	M2 при не отрицательном результате
    106	0164  C6 06 0147r FF					     MOV ERROR,	-1		     ; записываем флаг+
    107				     ошибки
    108	0169  EB D0						     JMP M2				     ; переход к    +
    109				     записи результата
    110
    111	016B			     LAB ENDS								     ;	     конец	    +
    112				     описания сегмента
    113				     END START									     ;		    +
    114				     конец	исходного модуля,
Turbo Assembler	 Version 3.0	    04/06/15 20:45:35	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/06/15"
??FILENAME			  Text	 "lab2	  "
??TIME				  Text	 "20:45:35"
??VERSION			  Number 0300
@CPU				  Text	 0101H
@CURSEG				  Text	 LAB
@FILENAME			  Text	 LAB2
@WORDSIZE			  Text	 2
B				  Byte	 LAB:0145
C				  Byte	 LAB:0146
ERROR				  Byte	 LAB:0147
M1				  Near	 LAB:014C
M2				  Near	 LAB:013B
RESULT				  Word	 LAB:0148
START				  Near	 LAB:0100
Y				  Byte	 LAB:0144

Groups & Segments		  Bit Size Align  Combine Class

LAB				  16  016B Para	  none
